/**
 * This file is part of fr.inria.plasmalab.workflow.
 *
 * fr.inria.plasmalab.workflow is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * fr.inria.plasmalab.workflow is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with fr.inria.plasmalab.workflow.  If not, see <http://www.gnu.org/licenses/>.
 */
package fr.inria.plasmalab.workflow.data.factory;

import java.io.File;

import fr.inria.plasmalab.workflow.data.AbstractData;
import fr.inria.plasmalab.workflow.exceptions.PlasmaDataException;
import net.xeoh.plugins.base.Plugin;
/**
 * This class contains the basic functions of a Data Factory.</p>
 * 
 * A Data Factory will have to instantiate a Data object (representing a model or a requirement).
 * A Data Factory is a JSPF plugin registered by the {@link PluginLoader}. 
 *
 */
public interface AbstractDataFactory extends Plugin {
	
	/** Name of the factory, as it appears in the GUI menus*/
	public String getName();
	/** How the factory should be displayed (usually its name)*/
	public String toString();
	/** Short description of the model generated by this factory.
	 *  Displayed by the GUI About windows and the CLI info command. 
	 */
	public String getDescription();
	/** Id of the factory.
	 *  Used to identified the data types in the CLI and the distributed services.
	 */
	public String getId();
	
	/** Create and empty data.
	 *  @param name of the data displayed in the project viewer
	 */
	public AbstractData createAbstractData(String name) throws PlasmaDataException;
	/** Create a data from a file.
	 * 
	 * @param name of the data displayed in the project viewer
	 * @param file that contains the data
	 * @throws PlasmaDataException	if an error occurs while opening the file
	 */
	public AbstractData createAbstractData(String name, File file) throws PlasmaDataException ;
	/** Create a data from a string content
	 * 
	 * @param name of the data displayed in the project viewer
	 * @param content of the data
	 */
	public AbstractData createAbstractData(String name, String content) throws PlasmaDataException;
	
}
